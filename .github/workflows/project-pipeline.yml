name: neural-dx7-pipeline

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
         submodules: recursive
         lfs: true

    - name: Install System Dependencies
      run: make deps

    - name: Download LibTorch
      run: make download-libtorch

    - name: Setup JUCE
      run: make setup

    - name: Set build type
      shell: bash
      run: |
        if [ "$GITHUB_REF_TYPE" == "tag" ]; then
            echo "BUILD_TYPE=Release" >> "$GITHUB_ENV"
            echo "BUILD_VERSION=${GITHUB_REF_NAME:1}" >> "$GITHUB_ENV"
        elif [ "$GITHUB_REF_NAME" == "main" ]; then
            echo "BUILD_TYPE=Release" >> "$GITHUB_ENV"
            echo "BUILD_VERSION=DEVBUILD" >> "$GITHUB_ENV"
        else
            echo "BUILD_TYPE=Debug" >> "$GITHUB_ENV"
            echo "BUILD_VERSION=DEVBUILD" >> "$GITHUB_ENV"
        fi
        echo "BUILD PARM =========="
        cat $GITHUB_ENV

    - name: Build
      run: make build

    - name: Show Build Output
      run: ls -lR ${{github.workspace}}/build

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-bin
        path: |
          ${{github.workspace}}/build/NeuralDX7PatchGenerator_artefacts/${{env.BUILD_TYPE}}/NeuralDX7PatchGenerator
          ${{github.workspace}}/build/NeuralDX7PatchGenerator_artefacts/${{env.BUILD_TYPE}}/lib/
          !**/*.a

  # build-macos:
  #   runs-on: macos-latest
  #   if: false  # Disabled for now
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #        submodules: recursive
  #
  #   - name: Install Dependencies
  #     run: |
  #       brew install cmake pkg-config harfbuzz
  #
  #   - name: Download and Setup LibTorch
  #     run: |
  #       wget -q https://download.pytorch.org/libtorch/cpu/libtorch-macos-1.4.0.zip
  #       unzip -q libtorch-*.zip
  #       sudo mv libtorch /usr/local/
  #       rm libtorch-*.zip
  #
  #   - name: Create Model File (dummy for CI)
  #     run: |
  #       mkdir -p models
  #       echo "dummy model content" > models/dx7_vae_model.pt
  #
  #   - name: Set build type
  #     shell: bash
  #     run: |
  #       if [ "$GITHUB_REF_TYPE" == "tag" ]; then
  #           echo "BUILD_TYPE=Release" >> "$GITHUB_ENV"
  #           echo "BUILD_VERSION=${GITHUB_REF_NAME:1}" >> "$GITHUB_ENV"
  #       else
  #           echo "BUILD_TYPE=Release" >> "$GITHUB_ENV"
  #           echo "BUILD_VERSION=DEVBUILD" >> "$GITHUB_ENV"
  #       fi
  #
  #   - name: Build
  #     run: |
  #       mkdir -p build
  #       cd build && cmake .. \
  #         -DCMAKE_PREFIX_PATH=/usr/local/libtorch \
  #         -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
  #         -DCMAKE_FIND_LIBRARY_SUFFIXES=".a;.so"
  #       make NeuralDX7PatchGenerator_Standalone -j$(sysctl -n hw.ncpu)
  #
  #   - name: Upload Artifacts
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: macos-bin
  #       path: |
  #         build/NeuralDX7PatchGenerator_artefacts/Release/NeuralDX7PatchGenerator
  #         build/NeuralDX7PatchGenerator_artefacts/Release/lib/*

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
          submodules: recursive
          lfs: true

    - name: Set build type
      shell: bash
      run: |
        if [ "$GITHUB_REF_TYPE" == "tag" ]; then
            echo "BUILD_TYPE=Release" >> "$GITHUB_ENV"
            echo "BUILD_VERSION=${GITHUB_REF_NAME:1}" >> "$GITHUB_ENV"
        elif [ "$GITHUB_REF_NAME" == "main" ]; then
            echo "BUILD_TYPE=Release" >> "$GITHUB_ENV"
            echo "BUILD_VERSION=DEVBUILD" >> "$GITHUB_ENV"
        else
            echo "BUILD_TYPE=Debug" >> "$GITHUB_ENV"
            echo "BUILD_VERSION=DEVBUILD" >> "$GITHUB_ENV"
        fi
        echo "BUILD PARM =========="
        cat $GITHUB_ENV

    - name: Install Dependencies
      shell: bash
      run: make deps

    - name: Download LibTorch
      shell: bash
      run: make download-libtorch

    - name: Setup JUCE
      shell: bash
      run: make setup

    - name: Build
      shell: bash
      run: make build

    - name: Show
      shell: cmd
      run: dir /s ${{github.workspace}}\build

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-bin
        path: |
          ${{github.workspace}}/build/NeuralDX7PatchGenerator_artefacts/${{env.BUILD_TYPE}}/NeuralDX7PatchGenerator.exe
          ${{github.workspace}}/build/NeuralDX7PatchGenerator_artefacts/${{env.BUILD_TYPE}}/*.dll