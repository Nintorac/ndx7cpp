name: Create Release

on:
  workflow_run:
    workflows: ["neural-dx7-pipeline"]
    types:
      - completed

permissions:
  contents: write  # Required to create releases

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && startsWith(github.event.workflow_run.head_branch, 'refs/tags/v') }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Extract tag name
        id: extract_tag
        run: |
          # Extract tag name from refs/tags/tagname format
          TAG_REF="${{ github.event.workflow_run.head_branch }}"
          TAG_NAME="${TAG_REF#refs/tags/}"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Extracted tag: $TAG_NAME"
        
      - name: Download artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Download artifacts from the triggering workflow run
          gh run download ${{ github.event.workflow_run.id }} --name windows-bin --dir ./windows-artifacts || echo "Windows artifacts not found"
          gh run download ${{ github.event.workflow_run.id }} --name linux-bin --dir ./linux-artifacts || echo "Linux artifacts not found"

      - name: Create release packages
        run: |
          # Create Windows ZIP
          if [ -d "./windows-artifacts" ]; then
            cd windows-artifacts
            zip -r ../NeuralDX7PatchGenerator-${{ steps.extract_tag.outputs.tag }}-windows.zip .
            cd ..
          fi
          
          # Create Linux ZIP  
          if [ -d "./linux-artifacts" ]; then
            cd linux-artifacts
            zip -r ../NeuralDX7PatchGenerator-${{ steps.extract_tag.outputs.tag }}-linux.zip .
            cd ..
          fi

      - name: Create Release with artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create release with artifacts
          gh release create "${{ steps.extract_tag.outputs.tag }}" \
            --repo="$GITHUB_REPOSITORY" \
            --title="Release ${{ steps.extract_tag.outputs.tag }}" \
            --generate-notes \
            NeuralDX7PatchGenerator-${{ steps.extract_tag.outputs.tag }}-*.zip